name: Testing

on: [push]

jobs:
  compile-front-end:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install node dependencies
        run: |
          npm install
      - name: Compile front-end
        run: |
          npm run build
      - uses: actions/upload-artifact@master
        with:
          name: front-end-assets
          path: frontend/build
  test:
    runs-on: ubuntu-latest
    needs:
      - compile-front-end
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: ["3.11.6"]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: front-end-assets
        path: frontend/build
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: "x64"
      env:
        AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache

    - uses: knowsuchagency/poetry-install@v1
      env:
        POETRY_VIRTUALENVS_CREATE: false

    - name: Set up cache
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Put Static Files in Place
      run: python manage.py collectstatic
      env:
        DJANGO_SECRET_KEY: some-secret-key
        DEBUG: true
        ALLOWED_HOSTS: localhost,127.0.0.1
        SQL_ENGINE: django.db.backends.postgresql
        SQL_DATABASE: postgres
        SQL_USER: postgres
        SQL_PASSWORD: postgres
        SQL_HOST: localhost
        SQL_PORT: 5432


    - name: Run Python Unit Tests
      run: |
        python manage.py test
      env:
        DJANGO_SECRET_KEY: some-secret-key
        DEBUG: true
        ALLOWED_HOSTS: localhost,127.0.0.1
        SQL_ENGINE: django.db.backends.postgresql
        SQL_DATABASE: postgres
        SQL_USER: postgres
        SQL_PASSWORD: postgres
        SQL_HOST: localhost
        SQL_PORT: 5432